entry 파일 : 리엑트가 가장 먼저 실행하는 스크립트
entry 파일에서 컴포넌트를 재귀적으로 찾아서 하나로 합친다

번들링 bundling : 흩어져 있는 스크립트 파일들을 하나의 스크립트로 합치는 과정

트렌스파일링 transfiling : webPack, babel 파일을 변환해준다.
자바스크립트 최신문법들을 예전 브라우저에서 동작하도록 호환성 해결


useEffect(콜백함수, 의존성 배열)
의존성 배열 : dependency Array

Effect => 사이드 이펙트(side Effect) 
부수효과 => 초기렌더링, 업데이트 될때마다 뭔가 해줘야 하는 것들
ex 타이머, 서버에서 데이터 조회, 수정, 알림창 표시
의존성 배열에 state, props를 설정한경우 : 해당 state, props가
변경 될때마다 콜백함수가 실행됨 // componentDidUpdate처럼 동작


웹사이트 개발할때

1. 정적 사이트(static)

2. 동적 사이트(dynamic stie) [SSR, CSR]

URL 주소 <= 맵핑 => HTML문서
[DB] <=> [서버] <= 1. 요청 / 2. 응답(Html) => [브라우저]

- 서버 사이드 렌더링 (SSR)
장점 : 재사용
단점 : 초기 렌더링이 느리다.
=> node.js (템플릿 엔진) 

- 클라이언트 사이드 렌더링 (CSR)

[DB] <=> [서버] <= 1. 요청 / 2. 비동기 콜 응답(JSON문자열 전송) => [브라우저]

[브라우저] => URL 주소 변경 / 브라우저에서 자바스크립트(리액트)를 이용해서 HTML파일 생성

장점 : 초기 로딩이 빠르다
단점 : HTML 파일을 생성하는 시간이 걸린다.